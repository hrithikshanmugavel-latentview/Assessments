# -*- coding: utf-8 -*-
"""Python - Internal Assessment 2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ADVlqCEpbL0sMsXUI5lXeEMr8JvY4YIV

LAB QUESTIONS
"""

import numpy as np
import pandas as pd

## Qn-1

import math

arr = np.array([10, 20, 30, 40, 50])
print("Array :", arr, "\n")

print("Minimum of the Array :",min(arr))
print("Maximum of the Array :",max(arr))
print("Sum of the Array :", sum(arr))

series1 = pd.Series(arr)

print("Mean of the Array :", series1.mean())
print("Standard Deviation of the Array :",series1.std())

## Qn-2

health_data = np.array([[160, 70, 30],   # height, weight, age for individual 1
                        [165, 65, 35],   # height, weight, age for individual 2
                        [170, 75, 40]])  # height, weight, age for individual 3

print(health_data)

## Qn-3

studentScores = np.array(["Hrithik", [98, 95, 89, 92, 88], "Roshan" [87, 78, 89, 90, 68],"Kavitha" [90, 95, 89, 92, 88] ])

print(studentScores)

## Qn-4

temperature_readings = np.linspace(15, 25, 24, dtype="float64")

print("Temperature Reading Collected over a day: ")

for i in temperature_readings:
  print(round(i, 2), "C")

## Qn-5

import numpy as np
daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
window_size = 5

print(daily_closing_prices)

mov_avg = np.rolling(daily_closing_prices, window = 5)

print(mov_avg)

## Qn-6

df = np.array(
    [np.arange(0, 1, 100)],
    [np.arange([1, 0.5, 100])], [np.arange([0.5, 2, 100]]
)

for i in df:
  print(i)

## Qn-7

properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])

print(properties_matrix)

det = np.transpose(properties_matrix)

print(det)

## Qn-8

import numpy as np

arr = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])

arr1 = np.array([])

for i in arr:
  print(i)

filtered_array = np.where(arr>5)

print(filtered_array)

## Qn-9

import pandas as pd

data = pd.DataFrame({'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']})

print(data)

filtered_data = data["Department"="HR"]

print(filtered_data)

## Qn-10

import pandas as pd

data = pd.DataFrame({'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]})

averageData = data.groupby("Salesperson").mean("Sales")

sorted_data = averageData.sort_values(by="Sales", ascending=False)
sorted_data["Rank"] = np.arange(1, len(averageData)+1)

print(sorted_data)

## Qn-11

data = pd.DataFrame({
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
})

## Qn-12

employee_data = pd.DataFrame({
    'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
    'Department': ['HR', 'IT', 'Finance', 'IT'],
    'Manager': ['John', 'Rachel', 'Emily', 'Rachel']
})

project_data = pd.DataFrame({
    'Employee': ['Alice', 'Charlie', 'Eve'],
    'Project': ['P1', 'P3', 'P2']
})

employee_data

## Qn-13

import pandas as pd

df = pd.read_csv("/content/Q13_sports_team_stats.csv")

df["Win Ratio"] = df["Wins"]/df["GamesPlayed"]

print(df)

## Qn-14
import pandas as pd

df = pd.read_csv("/content/Q14_customer_purchases.csv")
df

## Qn-15

import pandas as pd

df = pd.read_csv("/content/Q15_student_grades.csv")
df["Improvement"] = "Yes"if df["Grade"<80]