-- LAB 1

-- Question 1:

select * from l1_maintenance_records
where month(maintenance_date)=3 AND year(maintenance_date) = 2024 AND
cost > (select avg(cost) from l1_maintenance_records where month(maintenance_date) = 3);

-- Question 2:

select maintenance_type, technician_name, count(maintenance_type) as frequency_in_march
from l1_maintenance_records 
where month(maintenance_date) = 3 AND year(maintenance_date) = 2024
group by maintenance_type, technician_name
order by frequency_in_march desc limit 1;

-- Question 3:

select technician_name, maintenance_type, count(maintenance_type) as no_of_tasks, 
avg(cost) as average_maintanence_cost
from l1_maintenance_records
where month(maintenance_date) = 3 AND year(maintenance_date) = 2024
group by technician_name, maintenance_type
order by no_of_tasks desc, average_maintanence_cost desc limit 1;


-- LAB 2

-- Question 4:

select product_id, avg(incident_count_pre_update-incident_count_post_update) as average_reduction from l2_updates
group by product_id
order by average_reduction desc;

-- Question 5:

select * from l2_updates
where user_feedback_score = (select max(user_feedback_score) from l2_updates);

-- Question 6:

select product_id, 
round(avg((incident_count_post_update/incident_count_pre_update)*100),2) as percent_of_incident_count_post_update 
from l2_updates group by product_id
order by percent_of_incident_count_post_update desc limit 1;


-- LAB 3:

-- Question 7:

create or replace view patient_records as
(select p.patient_name, v.facility_id, f.facility_name, v.reason_for_visit, t.outcome
from l3_patients p join l3_visits v on p.patient_id = v.patient_id
join l3_treatments t on t.visit_id = v.visit_id
join l3_facilities f on f.facility_id = v.facility_id
where p.insurance_provider = 'HealthCare Inc.' 
and month(v.visit_date) = 3 and year(v.visit_date) = 2024); 

select * from patient_records;

-- Question 8:

select f.facility_id, f.facility_name, f.location, count(v.visit_id) as no_of_visits
from l3_facilities f join l3_visits v on f.facility_id = v.facility_id
where v.reason_for_visit = 'Emergency' and month(v.visit_date) = 3 and year(v.visit_date) = 2024
group by f.facility_id 
order by no_of_visits desc limit 1;

-- Question 9:

select p.insurance_provider, p.patient_name, t.treatment, t.outcome, count(p.insurance_provider) as number_of_patients
from l3_patients p join l3_visits v on p.patient_id = v.patient_id
join l3_treatments t on v.visit_id = t.visit_id
where outcome = 'Complicated' and quarter(visit_date) = 1
group by p.insurance_provider, p.patient_name, t.treatment
order by number_of_patients desc limit 1;


-- LAB 4:

-- Question 10:

select p.category, p.product_name, sum(s.quantity) as total_sold
from l4_products p join l4_sales s on p.product_id = s.product_id
group by p.category, p.product_name;

-- Question 11:

create or replace view sales_report as
(select st.store_id, st.store_name, st.region, s.sale_date, sum(s.quantity * p.price) as total_sales
from l4_stores st join l4_sales s on s.store_id = st.store_id
join l4_products p on p.product_id = s.product_id
group by st.store_id, s.sale_date);

select * from sales_report;

select * from sales_report where quarter(sale_date) = 1
order by total_sales desc limit 1;

-- Question 12:

SELECT * 
from l4_stores st LEFT join l4_sales s on s.store_id = st.store_id
LEFT join l4_products p on p.product_id = s.product_id
WHERE S.SALE_ID IS NULL;



